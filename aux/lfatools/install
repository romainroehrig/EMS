#!/bin/ksh
# --------------------------------------------------------------
# Install or update LFA software.
# --------------------------------------------------------------
# Subject:
# Method:
# Externals:
# Author:   98-03, J.M. Piriou.
# Modifications:
# --------------------------------------------------------------
# In input:
# In output:
# --------------------------------------------------------------
proc=$(basename $0) # present procedure name.
#
#-----------------------------------------------
# Define help.
#-----------------------------------------------
#
function usage
{
	echo " "
	echo "Install or update LFA software."
	echo " "
	echo "Usage: "$proc
	echo " "
	echo "The machine type is recognized by using the 'uname' UNIX command."
	echo " "
	exit
}
#
#-----------------------------------------------
# Get command line arguments.
#-----------------------------------------------
#
if [ "$1" = "-h" ]
then
	usage ; exit
elif [ $# -eq 1 ]
then
	if [ "$1" = "clean" ] ; then
		make clean 
		exit
	else
		usage ; exit
	fi
fi
#
#-----------------------------------------------
# Compatibilité avec les fichiers écrits
# avant la version 2.0 de LFA, et contenant des réels
# 4 octets.
#-----------------------------------------------
#
r4pre2="-Dr4pre2" # on force à 4 octets la précision des réels lus sur des fichiers écrits par les versions de LFA antérieures à 2.1.
r4pre2=" " # on ne force rien: on utilise l'autodocumentation du fichier.
#
#-----------------------------------------------
# Recognize machine type.
#-----------------------------------------------
#
machine=`uname -a` ; set $machine ; machine=$1
echo "The current machine is a "$machine
if [ "$machine" = "Linux" ] ; then
	#
	#-----------------------------------------------
	# Linux : pgf90 flags.
	#-----------------------------------------------
	#
	#export FC="pgf90 -Mpreprocess -Mextend -pc 64 -Kieee -byteswapio"$r4pre2
	#export FC="pgf90 -Mpreprocess -Mextend -r8 -i4 -Kieee -byteswapio info=inform"$r4pre2
	#export FC="pgf90 -Mpreprocess -Mextend -Kieee -byteswapio info=inform"$r4pre2
	#export BIBC="ar r"
	#
	# Linux : gfortran flags.
        export FC="gfortran -fconvert=big-endian -cpp"
        export BIBC="ar r"
	#-----------------------------------------------
	# Precision in bytes of integers and real.
	#-----------------------------------------------
	#
	export PRECIL="4" ; export PRECRL="4 8"
	export PRECIX="4" ; export PRECRX="8"
elif [ "$machine" = "Darwin" ] ; then
	#
	#-----------------------------------------------
	# Darwin : gfortran flags.
	#-----------------------------------------------
	#
	# Darwin : gfortran flags.
        #export FC="gfortran -fconvert=big-endian -cpp"
	export FC="gfortran -fconvert=big-endian -fno-second-underscore -fbacktrace -fopenmp -fno-sign-zero -fpic -ffree-line-length-none -m64 -ffree-form  -cpp -g -O2"
        export BIBC="ar r"
	#-----------------------------------------------
	# Precision in bytes of integers and real.
	#-----------------------------------------------
	#
	export PRECIL="4" ; export PRECRL="4 8"
	export PRECIX="4" ; export PRECRX="8"
elif [ "$machine" = "HP-UX" ] ; then
	#
	#-----------------------------------------------
	# HP flags.
	# -K: 
	# +es: extended source: no limitation for source lines length.
	# +U77: UNIX extensions for fortran; useful for getarg call.
	# +autodblpad: 64 bits real, 32 bits integers.
	#-----------------------------------------------
	#
	export FC="fort77 +es +U77 "$r4pre2 ; export PRECIL="4" ; export PRECRL="4 8" ; export PRECIX="4" ; export PRECRX="8"
	export FC="f90 +cpp=yes +extend_source -DHPPA "$r4pre2 ; export PRECIL="4 8" ; export PRECRL="4 8" ; export PRECIX="8" ; export PRECRX="8"
	export BIBC="ar r"
	#
	#-----------------------------------------------
	# Precision in bytes of integers and real.
	#-----------------------------------------------
	#
elif [ "$machine" = "CRAY" ] ; then
	#
	#-----------------------------------------------
	# Cray flags.
	# -N 132: lignes up to 132 characters.
	#-----------------------------------------------
	#
	export FC="f90 -N 132 -Dcray -eZ "$r4pre2
	# ATTENTION: sur Cray C90, ajouter -Ddblieee dans les options ci-dessus.
	export BIBC="bld cr"
	#
	#-----------------------------------------------
	# Precision in bytes of integers and real.
	#-----------------------------------------------
	#
	export PRECIL="8"
	export PRECRL="8"
	export PRECIX="8"
	export PRECRX="8"
elif [ "$machine" = "UNIX_System_V" ] ; then
	#
	#-----------------------------------------------
	# Fujitsu VPP flags.
	#-----------------------------------------------
	#
	export FC="frt -Sw -Am -On -Dusa -g0 -sc -Cpp -Wp,-DPARAL,-DVPP,-DFUJITSU,"$r4pre2 # debug  mode.
	export FC="frt -Sw -Am -Oe               -Cpp "$r4pre2 # normal mode.
	export BIBC="ar r"
	#
	#-----------------------------------------------
	# Precision in bytes of integers and real.
	#-----------------------------------------------
	#
	export PRECIL="4"
	export PRECRL="4 8"
	export PRECIX="4"
	export PRECRX="8"
elif [ "$machine" = "DEC" ] ; then
	#
	#-----------------------------------------------
	# DEC flags.
	#-----------------------------------------------
	#
	export FC="f90 -i8 -r8 -convert big_endian -extend_source -O0 -g -ladebug"$r4pre2 # debug mode.
	export FC="f90 -i8 -r8 -convert big_endian -extend_source "$r4pre2 # normal mode.
	export BIBC="ar r"
	#
	#-----------------------------------------------
	# Precision in bytes of integers and real.
	#-----------------------------------------------
	#
	export PRECIL="8"
	export PRECRL="8"
	export PRECIX="8"
	export PRECRX="8"
elif [ "$machine" = "SunOS" ] ; then
	#
	#-----------------------------------------------
	# Sun flags.
	#-----------------------------------------------
	#
	echo "SUN DEBUG " ; export FC="f90 -fw -Cpp -g -H asu"$r4pre2
	echo "SUN NORMAL" ; export FC="f90 -fw -Cpp "$r4pre2
	export BIBC="ar r"
	#
	#-----------------------------------------------
	# Precision in bytes of integers and real.
	#-----------------------------------------------
	#
	export PRECIL="4 8" ; export PRECRL="4 8"
	export PRECIX="8" ; export PRECRX="8"
else
	echo "ERROR: machine type unrecognized!..."
	echo "Edit the two scripts 'machine' and 'install'."
	exit
fi
#
#-----------------------------------------------
# Make a LFA library for each user integer or real precision.
#-----------------------------------------------
#
for PRECI in $PRECIL
do
	for PRECR in $PRECRL
	do
		echo "Compile LFA library with "$PRECR" bytes REAL, and "$PRECI" bytes INTEGER".
		#
		#-----------------------------------------------
		# 1. Replace iprec and ipreci in lfatail.h.
		#-----------------------------------------------
		#
		cat <<EOF > fs
s/XXIPRECRXX/$PRECR/g
s/XXIPRECIXX/$PRECI/g
EOF
		sed -f fs lfatail_env.h > lfatail.h ; /bin/rm fs
		#
		#-----------------------------------------------
		# 2. Make executables and libraries.
		#-----------------------------------------------
		#
		rm -f *.o liblfa.a ; make liblfa.a
		if test ! -s liblfa.a
		then
			exit
		fi
		mv liblfa.a liblfa_R${PRECR}I${PRECI}.a
		if test ! -s liblfa_R${PRECR}I${PRECI}.a
		then
			exit
		fi
	done
done
#
#-----------------------------------------------
# Compile LFA UNIX line executables for the highest machine precision.
#-----------------------------------------------
#
echo "Compile LFA command line utilities..."
#
#-----------------------------------------------
# 1. Replace iprec and ipreci in lfatail.h.
#-----------------------------------------------
#
cat <<EOF > fs
s/XXIPRECRXX/$PRECRX/g
s/XXIPRECIXX/$PRECIX/g
EOF
sed -f fs lfatail_env.h > lfatail.h ; /bin/rm fs
#
#-----------------------------------------------
# 2. Make executables and libraries.
#-----------------------------------------------
#
rm -f liblfa.a
cp liblfa_R${PRECRX}I${PRECIX}.a liblfa.a
make exe
make clean
echo
echo " The binaries are moved to DIRBIN (see Makefile)"
echo " The libraries are `ls liblfa_R*` are in `pwd` "
